"""empty message

Revision ID: ccb41b10996e
Revises: 
Create Date: 2023-01-04 20:53:46.137412

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from geoalchemy2.types import Geometry

# revision identifiers, used by Alembic.
revision = "ccb41b10996e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "challenge",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("due_date", sa.DateTime(), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column(
            "bbox",
            Geometry(
                geometry_type="POLYGON",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=False,
        ),
        sa.Column(
            "centroid",
            Geometry(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=False,
        ),
        sa.Column("language_tags", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("features_tags", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("country", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Drop these indexes before creating the new ones due to already exists error
    op.drop_index("idx_challenge_bbox", table_name="challenge")
    op.drop_index("idx_challenge_centroid", table_name="challenge")

    with op.batch_alter_table("challenge", schema=None) as batch_op:
        batch_op.create_index(
            "idx_challenge_bbox", ["bbox"], unique=False, postgresql_using="gist"
        )
        batch_op.create_index(
            "idx_challenge_centroid",
            ["centroid"],
            unique=False,
            postgresql_using="gist",
        )

    op.create_table(
        "feature",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("challenge_id", sa.Integer(), nullable=False),
        sa.Column("element_type", sa.Integer(), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["challenge_id"],
            ["challenge.id"],
        ),
        sa.PrimaryKeyConstraint("id", "challenge_id"),
    )
    with op.batch_alter_table("feature", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_feature_challenge_id"), ["challenge_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("feature", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_feature_challenge_id"))

    op.drop_table("feature")
    with op.batch_alter_table("challenge", schema=None) as batch_op:
        batch_op.drop_index("idx_challenge_centroid", postgresql_using="gist")
        batch_op.drop_index("idx_challenge_bbox", postgresql_using="gist")

    op.drop_table("challenge")
    # ### end Alembic commands ###
